/* checks exam grades and writes a file of them for later analysis */
#include <stdio.h>

main(int argc, char *argv[])
{
FILE *infile, *outfile;
 char innam[81],outnam[81],buffer[126],model[126];
 unsigned int ch,i,nrecs=0;

    printf("\nUse this program to enter test answers for the mid-term");
    printf("\nexam. First, any existing input file is copied to the");
    printf("\noutput file. (If the input and output files are not given");
    printf("\non the command line, you will be prompted). Next, new data");
    printf("\nwill be added to the output file: for each student, you");
    printf("\nwill be prompted for the name, then the grades. As each");
    printf("\nis entered, you will hear a beep if it is incorrect, and");
    printf("\nthe correct answer will be shown. When all grades have ");
    printf("\nbeen entered, an output file record is written. To correct");
    printf("\nthe last grade entered, press the del key, otherwise only");
    printf("\nthe letters A-D are valid during grade entry. To terminate");
    printf("\nthe program at any time, press F5.");
    while(1)
    {
        printf("\n\n Press RETURN to continue, or F5 to abort.");
        ch=getch();


  if(ch == 0)
  {
   ch=getch();    /* read second part of extended key code */
   if(ch == 63)
    exit();
  }
  else
   if(ch == '\r')      /* carriage return */
    break;
 }
 if(argc == 3)
 {
  strcpy(&innam,argv[1]);
  strcpy(&outnam,argv[2]);
 }
 else
 {
  printf("\nEnter input file spec or \"new\" if first time: ");
  scanf("%s",innam);
  printf("\nEnter output file spec: ");
  scanf("%s",outnam);
 }
 if(strcmp(innam,"new"))
  if((infile=fopen(innam,"rb")) == NULL)
  {
   printf("Can't open file %s.",innam);
   exit();
  }
 if((outfile=fopen(outnam,"wb")) == NULL)
 {
  printf("Can't open file %s.",outnam);
  exit();
 }
 if(strcmp(innam,"new"))
 {
  while(fread(buffer,126,1,infile) == 1)
  {
   if(!nrecs++)
    strcpy(model,buffer);
  }
  fclose(infile);
 }
 while(1)
 {
  for(i=0;i<126;i++)
   buffer[i]=' ';
  printf("\x1B[2J");                 /* clear screen */
        if(!nrecs)
   printf("\nEnter \"model\" to identify grade model: ");
  else
   printf("\nEnter student's name: ");
  printf(", then RETURN");
  printf("\x7");                   /* bell */
  i=0;
     while(((ch=getch()) != 13) && (i < 25))
     {
   if(ch == 0)
    if((ch=getch()) == 63)            /* F5 */
     exit();
    else
     if((ch == 83) && (i > 0))     /* DEL */
     {
      i--;
      printf("\x1B[D \x1B[D"); /* erase byte on screen */
     }
   else
   {
          if((ch >= 'a') && (ch <= 'z'))
     ch -= 32;
    if(((ch >= 'A') && (ch <= 'Z')) || (ch == ' ') || (ch == ','))
    {
     printf("%c",ch);
              buffer[i++]=ch;
    }
   }
  }
  i=25;
     while(i < 125)
     {
   printf("\x1B[4;1f");             /* cursor to row 4 col 1 */
   printf("Enter A, B, C, or D as answer for question %2d: ",i-24);
   printf("\x7");                   /* bell */
   if((ch=getch()) == 0)
    if((ch=getch()) == 63)            /* F5 */
     exit();
    else
     if((ch == 83) && (i > 25))    /* DEL */
     {
      i--;
      printf("\x1B[D \x1B[D"); /* erase byte on screen */
     }
   else
   {
          if((ch >= 'a') && (ch <= 'd'))
     ch -= 32;
    if((ch >= 'A') && (ch <= 'D'))
    {
     printf("%c",ch);
     buffer[i]=ch;
    }
    else
     printf("\x7");                   /* ring bell */
    if(!nrecs)
     i++;
    else
    {
     if(model[i] == buffer[i])
      i++;
     else
     {
      printf("\x1B[7;1f");            /* to row 7 col 1 */
      printf("\x7");                  /* ring bell */
      printf("Correct answer is %c",model[i]);
      printf("Press RETURN to continue");
      while((ch=getch()) != '\r');
      printf("\x1B[7;1f");
      printf("\x1B[K\n\x1B[K");        /* clear lines 7-8 */
     }
    }
   }
  }
  buffer[i] = '\r';
  if(!nrecs++)
   memmove(model,buffer,126);
  fwrite(buffer,126,1,outfile);
    }
 fclose(outfile);
}
