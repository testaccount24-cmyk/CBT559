/*****************
/* download.c */
/*********************************************************************/
/* Download a character set to the Epson FX-85 printer in Epson mode */
/* Patterned after program on page 110 in manual                     */
/* First, the printer ROM is copied to its RAM, to provide the       */
/* initial character set. Next, a file of character definitions      */
/* is read, converted to printer commands, and is sent to the printer*/
/*********************************************************************/

#include <stdio.h>
#include <stdlib.h>

main(int argc, char *argv[]) {
  FILE *prtptr,*filptr;
  unsigned int ret=0,chrdef=0;
  unsigned int c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0;
  unsigned char ul=' ';

  if(argc != 2) {
    printf("\nFormat: C>download download.chr");
    printf("\nWhere download.chr is the name of a disk file");
    printf("\ncontaining download character definitions for an Epson");
    printf("\nFX-85. Format is one line per character, ending with");
    printf("\ncarriage return:");
    printf("\n            cc,ul,c1,c2,c3,c4,c5,c6,c7,c8,c9");
    printf("\n where cc is the character (hex) between 21-7E or");
    printf("\n A1-FE, ul is 'U' if upper 8 bits are defined, else");
    printf("\n'L'. c1, c2, c3, c4, c5, c6, c7, c8,and c9 are two-");
    printf("\ndigit hex values for each of the 9 columns. See");
    printf("\n       the Epson printer manual: ");
    printf("\n       'USER-DEFINED CHARACTERS'");
    exit(0); }
 if((filptr=fopen(argv[1], "r")) == NULL) {
    printf("\nCan't open the download definition file %s",argv[1]);
    exit(8); }
 if((prtptr=fopen("prn","w")) == NULL) {
    printf("\nCan't open the printer");
    exit(8); }
 fputs("\x1B:",prtptr);    /* Copy ROM to RAM (Epson mode only) */
 fputc('\x00',prtptr);
 fputc('\x00',prtptr);
 fputc('\x00',prtptr);
 fputs("\x1B%",prtptr);    /* Select user defined set for in/out */
 fputc('\x01',prtptr);
 fputc('\x00',prtptr);
 while((ret=fscanf(filptr,"%x,%c,%x,%x,%x,%x,%x,%x,%x,%x,%x",&chrdef,
                    c2,&c3,&ul,&c1,&c4,&c5,&c6,&c7,&c8,&c9)) != EOF) {
   if(ret != 11) {
      printf("\nIncorrect number of fields in definition for %X",
         chrdef);
      exit(8); }
   if((chrdef < 33) || ((chrdef > 126) &&
         (chrdef < 161)) || (chrdef > 254)) {
      printf("\n%X is an invalid character value.",chrdef);
      printf("\nUse 21-7E or A1-FE");
      exit(8); }
   if(!((ul == 'U') || (ul == 'L'))) {
      printf("\n%c is an invalid ul value for character %x",ul,chrdef);
      exit(8); }
   fputs("\x1B&",prtptr);    /* Define a user character */
   fputc('\x00',prtptr);
   fputc(chrdef,prtptr);     /* character to define (from) */
   fputc(chrdef,prtptr);     /* character to define (to) */
   if(ul == 'L')
      fputc('\x00',prtptr); /* lower 8 bits */
   else
      fputc('\x80',prtptr); /* upper 8 bits */
   fputc(c1,prtptr);         /* column 1 value */
   fputc(c2,prtptr);         /* column 2 value */
   fputc(c3,prtptr);         /* column 3 value */
   fputc(c4,prtptr);         /* column 4 value */
   fputc(c5,prtptr);         /* column 5 value */
   fputc(c6,prtptr);         /* column 6 value */
   fputc(c7,prtptr);         /* column 7 value */
   fputc(c8,prtptr);         /* column 8 value */
   fputc(c9,prtptr);         /* column 9 value */
   fputc('\x00',prtptr);     /* Last 2 numbers always zero */
   fputc('\x00',prtptr); }
 fclose(filptr);
 fclose(prtptr);
}
