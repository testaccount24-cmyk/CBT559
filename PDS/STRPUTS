/* program to print an input file using the fputs function */
/* and using the sscanf function to build the print line   */
/* structure from the input record structure               */
/* author R Thornton  04/89 */

#include <stdio.h>
#include <string.h>

main(int argc, char *argv[])
{
    struct
    {
 char claim_no[9];
 char last_name[15];
 char first_name[10];
 char soc_sec[9];
 char type_ins;
 char proc_code[5];
 char place;
 char amount[7];
 char clmcr;
 char clmnl;
    } clmrec;

    struct
    {
 char pclaim[9];
 char fill1;
 char pfirst[8];
 char fill2;
 char plast[12];
 char fill3;
 char psocsec[11];
 char fill4;
 char ptype[4];
 char fill5;
 char pproc[5];
 char fill6[2];
 char pplace[4];
 char fill7;
 char pamount[9];
 char pcr;
 char pnl;
 char pterm;
    } prtline;

    FILE *infil,*prtfil;

    int i;
    long amt;
    char amtasc[8];
    char *pptr;

    if(argc!=2)
    {
 printf("\nSYNTAX: dumphex [d:][\path\]filename[.ext]");
 exit(0);
    }
    if((infil=fopen(argv[1],"rb"))==NULL)
    {
 printf("\nCan't open the input file, $s",argv[1]);
 exit(0);
    }
    if((prtfil=fopen("prn","w"))==NULL)
    {
 printf("\nCan't open the printer file.",argv[1]);
 exit(0);
    }
    pptr=&prtline;
    for(i=0;i<sizeof(prtline);i++)
 *(pptr+i)=' ';
    prtline.pterm = '\0';

    fputs("CLAIM-NO  PATIENT NAME          SOC-SEC-NBR TYPE PROC   PLACE AMOUNT\
r\n",prtfil);

    while(fread(&clmrec,sizeof(clmrec),1,infil)==1)
    {
 memcpy(prtline.pclaim,clmrec.claim_no,9);
 memcpy(prtline.plast,clmrec.last_name,12);
 memcpy(prtline.pfirst,clmrec.first_name,8);
 memcpy(prtline.psocsec,clmrec.soc_sec,3);
 *(prtline.psocsec+3) = '-';
 memcpy(prtline.psocsec+4,clmrec.soc_sec+3,2);
 *(prtline.psocsec+6) = '-';
 memcpy(prtline.psocsec+7,clmrec.soc_sec+5,4);
 if(clmrec.type_ins == 'F')
     memcpy(prtline.ptype,"FAM",3);
 else if(clmrec.type_ins == 'S')
     memcpy(prtline.ptype,"SGL",3);
 else if(clmrec.type_ins == 'M')
     memcpy(prtline.ptype,"1MIN",3);
 else
     memcpy(prtline.ptype,"???",3);
 memcpy(prtline.pproc,clmrec.proc_code,5);
 if(clmrec.place == 'D')
     memcpy(prtline.pplace,"OFFC",4);
 else if(clmrec.place == 'H')
     memcpy(prtline.pplace,"HOSP",4);
 else
     memcpy(prtline.pplace,"????",4);
 memcpy(prtline.pamount,clmrec.amount,7);
 prtline.pcr = '\r';
 prtline.pnl = '\n';
 prtline.pterm = '\0';
 fputs(&prtline,prtfil);
 for(i=0;i<sizeof(prtline);i++)
     *(pptr+i) = ' ';
    }


    fclose(prtfil);
    fclose(infil);
}
