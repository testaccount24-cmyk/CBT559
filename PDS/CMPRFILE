/* cmprfile.c */
/********************************************/
/* Compares two simple sequential files.    */
/* Stops after 10th difference              */
/*                                          */
/* Fully qualified dsnames are provided in  */
/* the parm field of the JCL EXEC statement.*/
/*                                          */
/* Since the fopen() function works like the*/
/* TSO dsname references, the dsname must be*/
/* enclosed in apostrophes, else it is pre- */
/* fixed with USERID as the high level node.*/
/* I couldn't figure out how to pass the    */
/* apostrophes via the PARM parameter, so   */
/* included code to add the apostrophes.    */
/********************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int  main(int argc, char *argv[]) {
  FILE *f1,*f2;
  int c1,c2;
  int i,j=0,l;
  char dsname1[47],dsname2[47];

  printf("\nEXEC statement PARM fields entered:");
  for(i=0;i<argc;i++) {
    l = strlen(argv[i]);
    printf("\nParm %d (%d bytes): %s",i,l,argv[i]);}
  if(argc != 4) {                              /* arg count must = 4 */
    printf("\nExpected two dsnames enclosed in double quotes.");
    exit(8); }
  dsname1[0] = dsname2[0] = 0;
  strcat(dsname1,"'");           /*start dsname with apostrophe */
  strcat(dsname1,argv[1]);       /*add dsname from parm on exec */
  strcat(dsname1,"'");           /*and end with apostrophe      */
  strcat(dsname2,"'");           /*start dsname with apostrophe */
  strcat(dsname2,argv[3]);       /*add dsname from parm on exec */
  strcat(dsname2,"'");           /*and end with apostrophe      */
  if((f1=fopen(dsname1,"rb")) == NULL) {       /* open first file */
    printf("\nCan't open the %s file.\n",dsname1);
    exit(8); }
  if((f2=fopen(dsname2,"rb")) == NULL) {       /* open second file */
    printf("\nCan't open the %s file.\n",dsname2);
    exit(8); }

  for(i=0;i<32767;i++) {
    c1 = getc(f1);                      /* get character from file 1 */
    c2 = getc(f2);                      /* get character from file 2 */
    if((c1 == EOF) && (c2 == EOF)) {
       printf("\nCompare ended with %d mismatches.",j);
       break;
    }
    if(c1 == EOF) {
      printf("\nFile 1 ended before file 2. %d mismatches found.",j);
      break;
    }
    if(c2 == EOF) {
      printf("\nFile 2 ended before file 1. %d mismatches found.",j);
      break;
    }
    if(c1 != c2) {
      j++;
      if(j > 10) {
 printf("\nCompare stopped after 10 mismatches found");
 break;
      }
      printf("\nfound mismatch at byte number %d, press any key.",i);
      getchar();
    }
  }
  printf("\nCompare stopped after %d bytes with %d mismatches.",i,j);
  fclose(f1);                                 /* close the file */
  fclose(f2);
  exit(0);
}
