/*************/
/* emperor.c */
/********************************************************************/
/* EMPEROR: adapted from a PL/I game written for the IBM mainframe. */
/********************************************************************/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>

  int people = 0;
  long grain = 0;
  long acres = 0;

int  main(void) {

  long gtusnmbr(void);
     char gtusrply(void);
     float get_random(int first_time);

  char c;
  int i;
  int y_ars = 0;
  int  immigrants = 0;
  long rats = 0;
  long farmland = 0;
  float yield = 0;
  float fert_amt = 0;
  long food = 0;
  int starved = 0;
  int plague = 0;
  char l[80];
  int x = 0;
  int first = 1;
  int fert_sw = 0;
  int plag_sw = 0;
  float number = 0.0;
  long diff = 0;
  int value = 0;
  long trade = 0;
  int serum = 0;
  char games[10][32] = {
    "ping pong for a year",
    "bridge for a year",
    "little sally saucer for a year",
    "monoply for a year",
    "marbles for a year" ,
    "spin the bottle for a year",
    "pinochle for a year",
    "leap frog for a year",
    "strip poker for a year",
    "run-sheep-run for a year"
  };
  long innoculated = 0;
  long tot_imm = 0;
  long tot_starved = 0;
  long tot_plagued = 0;
  long acres_bot = 0;
  long acres_sold = 0;
  long acres_start = 0;
  long peopl_start = 0;
  long tot_fert = 0;
  long planted = 0;
  long harvestd = 0;
  long grain_plant = 0;
  long harvest_lst = 0;
  long grain_buy = 0;
  long grain_sold = 0;
  int grain_start = 0;
  int last_shot = 0;
  long totl_shot = 0;
  int robbed = 0;
  int this_shot = 0;

  for(i=0;i<25;i++)
    printf("\n");
  printf("\nF I S  Econometric Modeling System");
  printf("\n==================================");
  printf("\n");
  number = get_random(1);     /* initialize random seed */
  acres = number * 1000;
  acres_start = acres;
  number = get_random(0);
  people = number * 1000;
  peopl_start = people;
  number = get_random(0);
  grain = number * 2000;
  grain_start = grain;
  printf("\nDo you need instructions? y or n?: ");
  c = gtusrply();

  if(c == 'n') goto pop;
  printf("\nYou are the emperor of Somewhereia!!");
  printf("\nYou will reign for a maximum of 25 years,");
  printf("\nand will be given people, land, and grain.");
  printf("\nYour goal is to increase your empire");
  printf("\nby having your people farm your land");
  printf("\nto produce grain for your use as food,");
  printf("\nseed for planting, and the trade basis");
  printf("\nthat may be used to buy more land to");
  printf("\nproduce more grain to buy more land, etc.");
  printf("\nSimple, right?  Then let's get started....");
  printf("\n");
  goto pop;
   status:
  printf("\n");
  if(y_ars > 1) {
    if(food > (people * 1.3))
   grain = grain + ((food - (people * 1.3))/2);
    if(grain<0) printf("\n!!!!!At 01 Grain=%d",grain);
    printf("\nState of your empire after %d years",y_ars);
  }
  else
  printf("\nState of your empire after one year.");
  printf("\n-----------------------------------");
  if(!immigrants) goto starvout;
  printf("\nThere were %d immigrants.",immigrants);
  tot_imm = tot_imm + immigrants;
   starvout:
  if(first)
    goto died;
  if(starved >= (immigrants+people))
    starved = people;
  if(!starved)
    goto died;
     printf("\n%d people starved to death.",starved);
     tot_starved = tot_starved + starved;
   died:
  if(!plague) goto pop;
  if(plague >= (people + immigrants - starved)) {
    printf("\nbut the worst is yet to come. . .");
    printf("\nThe plague wiped out your entire population!!");
    printf("\nBetter fortune next time!");
    tot_plagued = tot_plagued + plague;
    people = 0;
    goto finis;
  }
     printf("\n%d people were killed by the plague.",plague);
     tot_plagued = tot_plagued + plague;
   pop:
     people = people - (starved + plague) + immigrants;
  if(starved | plague) {
    printf("\nSo, your current population is %d people",people);
  }
  else {
    printf("\nYour current population is %d people",people);
  }
  printf("\nYou own %ld acres, and control %ld bushels of grain.",
    acres,grain);
  if(first) goto grain_cnt;
  if(acres > 1000000) goto mill_yun_air;
  if(grain > 4000000) goto mill_yun_air;
  if(!acres & !grain) {
    printf("\nYour situation is hopeless. The sounds you hear are");
    printf("\nshouted curses as people leave your stinkin' empire");
    goto finis;
  }
   graincount:
  if(y_ars > 24)
    goto over_age;
  printf("\nDo you want to continue? y or n?: ");
  c = gtusrply();
  if(c == 'n') {
    printf("\nSo long, successful. . . . .");
    goto finis;
  }
   grain_cnt:
     y_ars = y_ars + 1;
     printf("\nYou have %ld bushels of grain in storage.",grain);
   landtrade:
  if(first)
    goto eat;
  number = get_random(0);
  value =(86*number)+1;
   retry:
     printf("\nLand is trading for %d bushels of grain per acre.",
            value);
  if(value > grain) {
    printf("\nUnfortunately, you are in no position to buy!");
    goto sell;
  }
   buy:
     trade = grain/value;
     printf("\nThe maximum you may buy is %ld acres.",trade);
     printf("\nHow many acres would you like to buy?");
  trade = gtusnmbr();
  if(!trade)
    goto sell;
  if((trade * value) > grain) {
    printf("\nYou don't have enough grain to buy that much land.");
    printf("\nNice try there, Emperor baby.");
    goto retry;
  }
  acres_bot = acres_bot + trade;
  grain = grain - (trade * value);
  if(grain<0) printf("\n!!!!!At 02 Grain=%d",grain);
  grain_buy = grain_buy + (trade * value);
  acres = acres + trade;
  if(acres<0) printf("\n!!!!!At 12 Acres=%d",acres);
  printf("\nYour land trading leaves %ld bushels of grain.",grain);
  goto eat_em;
   sell:
  if(!acres) {
    printf("\nYou have no land to sell!");
    goto eat;
  }
  printf("\nYou have %ld acres of land.",acres);
  trade = acres * value;
  printf("\nAll your land would bring %ld bushels of grain.",trade);
   retryagain:
     printf("\nHow many acres would you like to sell?");
  trade = gtusnmbr();
  if(!trade)
    goto eat;
  if(trade > acres) {
    printf("\nSorry, I don't buy on margin.");
       printf("\nI will buy as much as you own,");
       printf("\nbut no more than that!!");
    goto retryagain;
  }
  grain = grain + (trade * value);
  if(grain<0) printf("\n!!!!!At 03 Grain=%d",grain);
  acres_sold = acres_sold + trade;
  grain_sold = grain_sold + (trade*value);
  acres = acres - trade;
  if(acres<0) printf("\n!!!!!At 13 Acres=%d",acres);
   eat:
  if(first)
   goto pass;
  printf("\nYou have %ld bushels of grain.",grain);
   eat_em:
     printf("\nand %d people to feed.",people);
   pass:
  if(!grain) {
    printf("\nThat sound you hear is the growling ");
    printf("\nof %d hungry stomachs!",people);
    printf("\nYou have no grain to set aside for food!!");
    goto farm;
  }
  printf("\nHow many bushels of grain should be set aside for food?:");
  food = gtusnmbr();
  if(food > grain) {
    printf("\nYou can't set aside more grain than you have, Dummy!");
    printf("\nI mean your Emporership (he mumbled humbly)");
    goto eat;
  }
  if(!food) {
    printf("\nThat's genocide, you swine!");
    printf("\nBeware of the four horsemen of the apocalypse...");
  }
  grain = grain - food;
  if(grain<0) printf("\n!!!!!At 04 Grain=%d",grain);
  printf("\nThat leaves %ld in storage.",grain);
 farm:
  if(!acres) {
    printf("\nYou have no farmland! sorry about that!");
    farmland = 0;
    goto doit;
  }
  printf("\nYou have %ld acres of land, and %d people as farmers.",
   acres,people);
  if(!grain) {
    printf("\nbut have no seed to plant!");
    farmland = 0;
    goto doit;
  }
   retry1:
  printf("\nHow many acres do you want to farm?: ");
  farmland = gtusnmbr();
  if(farmland > acres) {
    printf("\nI don't think you quite understand, Emperor, sir...");
    printf("\nYou cannot farm more land than you own!");
    goto retry1;
  }
  if((farmland * 1.8) > people) {
    printf("\nYou don't have enough people to farm that much land.");
    goto retry1;
  }
  if((farmland * .78) > grain) {
    printf("\nYou don't have enough seed to farm that much land.");
    goto retry1;
  }
  if(!farmland)
    goto doit;
  if(!grain)
    goto doit;
  grain = grain - (farmland * .78);
  printf("\n%.0f bushels were used for seed.",(farmland * .78));
  if(grain<0) printf("\n!!!!!At 05 Grain=%d",grain);
  planted = planted + farmland;
  grain_plant = grain_plant + (farmland * .78);
  number = get_random(0);
  if(number > .698765) {
    fert_sw = 0;
    goto doit;
  }
  number = get_random(0);
  fert_amt = (10 * number) + 0.5;
  printf("\nFertilizer is selling for %3.1f bushels/acre.",fert_amt);
  printf("\nDo you wish to enhance your crop yield? y or n?: ");
  c = gtusrply();
  if(c == 'y') {
    fert_sw = 0;
    goto doit;
  }
  fert_sw = 1;
  value = farmland * fert_amt;
  if(value > grain) {
    printf("\nNice try emp, but I don't sell the manure");
    printf("\non credit!");
    fert_sw = 0;
    goto doit;
  }
  grain = grain - value;
  if(grain<0) printf("\n!!!!!At 06 Grain=%d",grain);
  tot_fert = tot_fert + value;
   doit:
  if(grain > 22222) {
    number = get_random(0);
    if(number > .920000) {
   printf("\nA very rare grain rot attacks your grain in storage!");
   harvest_lst = harvest_lst + (grain/1.91);
   grain = grain / 1.91;
   if(grain<0) printf("\n!!!!!At 07 Grain=%d",grain);
   printf("\n Only %ld bushels could be saved.",grain);
    }
  }
  if(plag_sw) {
    if(last_shot >= people) {
   printf("\nPlague innoculations are unnecessary this year,");
   printf("\nall your empire is still immunized!");
   innoculated = last_shot / 2;
   goto no_shots;
    }
    number = get_random(0);
    serum=(13 * number) + 1;
    if(grain > 2000000)
   serum = serum + 128;
    else
   if(grain > 1500000)
     serum = serum + 64;
   else
     if(grain > 1000000)
    serum = serum + 32;
     else
    if(grain > 500000)
      serum = serum + 16;
    else
      if(grain > 100000)
     serum = serum + 8;
      else
     if(grain > 50000)
       serum = serum + 4;
     else
       if(grain > 25000)
      serum = serum + 2;
    printf("\nU.N. World Health is distributing black death");
    printf("\ninnoculations for");
    printf("\n@ %d bushels of grain per person",serum);
    if(serum > grain) {
   printf("\nUnfortunately, you can't afford it....tsk....tsk");
   innoculated = 0;
   goto noshots;
    }
   peopleshots:
     innoculated = grain/serum;
  if(innoculated >= people)
    innoculated = people;
  printf("\nYou can afford to innoculate %d people",innoculated);
  if(innoculated <= (people-last_shot))
    goto shots;
  if(!last_shot)
    goto shots;
  innoculated = people - last_shot;
  printf("\nHowever, %d of your people are still immunized,",
          last_shot);
  printf("\nand you need only %d more shots.",innoculated);
   shots:
     printf("\nHow many get the shot?");
  innoculated = gtusnmbr();
  this_shot = innoculated;
  if(innoculated > (grain/serum)) {
    printf("\nW h a a t ?");
    goto peopleshots;
  }
  if(!innoculated) {
    printf("\nIts easy to gamble with someone else's life,");
    printf("\nisn't it?");
    goto noshots;
  }
  grain = grain - (innoculated * serum);
  if(grain<0) printf("\n!!!!!At 08 Grain=%d",grain);
  printf("\nThat leaves %ld bushels stored.",grain);
   }
   noshots:
     totl_shot = totl_shot + innoculated;
   no_shots:
     first = 0;
  if(!farmland) {
    number = get_random(0);
    x = number * 10;
    printf("\nWith no land being farmed, the people played %s",
             games[x]);
    number = get_random(0);
    rats = grain * number;
       printf("\nWhile the rats overran your graineries,");
       grain = grain - rats;
    if(grain<0) printf("\n!!!!!At 08 Grain=%d",grain);
    if(!grain)
   printf("\nand with nothing left to eat, the rats ate the cats.");
    else
   printf("\nleaving only %ld bushels of grain stored.",grain);
    goto passrats;
  }
  printf("\nThe people are working under your prescribed conditions.");
  number = get_random(0);
  if(number < .001111) {
    printf("\nA revolt of the peasantry has overthrown your reign!");
    printf("\nreign. You were lucky to escape with your life...");
    goto revolt;
  }
  printf("\nHere are the fruits of their labor. . . .");
  rats = 0;
  number = get_random(0);
  if(number < .002222) {
    if(!fert_sw)
   goto not_fert_ed;
    printf("\nYour over-fertilized land causes a crop burn-out!");
    printf("\nYou were unable to save any of your crop.");
    goto passrats;
  }
   not_fert_ed:
  if(!farmland)
    yield = 0.0f;
  else {
    number = get_random(0);
    yield = (17.0f * number) + 0.1f;
  }
  if(fert_sw) {
    number = get_random(0);
    yield = yield + (float)(fert_amt * (number + 1.0) + fert_amt);
  }
  if(farmland)
    yield = yield + 0.8f;
  printf("\nYour yield per acre was %.2f bushels.",yield);
  diff = (long)(yield * (float)farmland);
  if(!diff)
    goto passrats;
  diff = diff + 1;
  harvestd = harvestd + diff;
  printf("\nFor a total harvest of %ld bushels.",diff);
  number = get_random(0);
  if(number < .760000) {
    grain = grain + diff;
    if(grain<0) printf("\n!!!!!At 09 Grain=%d",grain);
    goto passrats;
  }
  else
    if(number > .960000)
   rats = diff;
    else
   rats = (((number * number) * number) * diff) + 1;
  if(!diff)
    goto passrats;
  if(rats >= diff) {
    if(number > .860000)
   printf("\nA swarm of locusts devastated your harvest!");
    else
         printf("\nbut the rats ate it all. (those pigs)!");
  }
  else {
    if(fert_sw)
   rats = rats / 2;
    printf("\nBut the rats ate %ld bushels.",rats);
    grain =(grain+diff)-rats;
    if(grain<0) printf("\n!!!!!At 10 Grain=%d",grain);
  }
   passrats:
     harvest_lst = harvest_lst + rats + robbed;
     robbed = 0;
  if(food > (people * 1.3))
    starved = 0;
  else
    starved = people - (food / 1.3);
  if(starved) {
    printf("\nYour underfed peasants are pilfering your graineries");
    if((starved * 1.11) >= grain) {
   robbed = grain;
   grain = 0;
    }
    else {
   robbed = (starved * 1.11);
   grain = grain - robbed;
   if(grain<0) printf("\n!!!!!At 11 Grain=%d",grain);
    }
    if(!robbed)
   printf("\nWith no food available, the people ate their shoes.");
    else
   printf("\nThey stole %d bushels from you!",robbed);
  }
  number = get_random(0);
  immigrants = number * 100;
  plague = 0;
  number = get_random(0);
  if(number > .499999) {
    plag_sw = 1;
    number = get_random(0);
    plague = ((people-last_shot) / 2) - (number * 99);
    if(plague < 0)
   plague = plague * (-1);
    if((innoculated + last_shot) >= plague)
   plague =0;
    else
   plague=plague -(innoculated + last_shot);
    last_shot = (this_shot/2);
  }
  else
    last_shot = last_shot + (this_shot *0.7);
  goto status;
   mill_yun_air:
     printf("\nSince you now have more than 1,000,000 acres of land,");
     printf("\nand more than 4,000,000 bushels of grain...");
     printf("\nYou far surpassed all royal expectations!");
     printf("\nAnd your immense empire is becoming too tyrannical.");
    goto happi_ness;
     over_age:
       printf("\nAfter 25 years, you have exceeded your royal");
       printf("\nusefulness");
     happi_ness:
       printf("\nIn an effort to maintain a happy population. . .");
     revolt:
       printf("\n you decide to abdicate in favor of the prime");
       printf("\nminister. The king is dead! long live the king!");
     finis:
       printf("\n ");
    printf("\nYou began with %d people,",peopl_start);
       printf("\nthere were %d immigrants,",tot_imm);
    printf("\nbut %d starved to death,",tot_starved);
    printf("\nand %d died of the \"crud\" even tho'",tot_plagued);
       printf("\n%d had shots,",totl_shot);
    printf("\nleaving %d alive at the end.",people);
       printf("\nAs a result of your land trading enterprises....");
       printf("\nYou started with %ld acres of land, and with",
                 acres_start);
    printf("\n%ld bushels of grain,",grain_start);
       printf("\nYou bought %ld acres, paying %ld bushels",
         acres_bot,grain_buy);
    printf("\nand you sold %ld acres, receiving %ld bushels,",
    acres_sold,grain_sold);
       printf("\nending  up  with %ld acres, and with %ld",
                acres,grain);
       printf("\n bushels in storage.");
    printf("\nOver the seasons of your imperial reign, of %d",
                 y_ars);
       printf("\nyears you planted %ld acres, with %ld bushels",
                 planted,grain_plant);
       printf("\n of seed,");
       printf("\nyielding %ld bushels, with %ld bushels as fertilizer",
                 harvestd,tot_fert);
       printf("\nbut you lost %ld bushels to the rats, ET.AL.",
                 harvest_lst);
    printf("\n");
}
/********************************************************************/
/* gtusnmbr returns an integer value entered by the user            */
/********************************************************************/
long  gtusnmbr(void) {
  char s[256];
  int numeric;
  int nbr_digits;
  int i;
  long number;

  numeric = 0;
  do {
  gets(s);
  if(s[0] == '?') {
    printf("\nYour current population is %d people,",people);
    printf("\nfarming %ld acres, and storing %ld bushels.",
    acres,grain);
    continue;
  }
  nbr_digits = strlen(s);
  if((nbr_digits > 0) && (nbr_digits < 11));
  else {
    printf("\nPlease enter a number between 0 and 2147483647: ");
    continue;
  }
  for(i = 0;i < nbr_digits; i++) {
    if((s[i] < '0') || (s[i] > '9')) {
   printf("\nPlease enter ONLY digits 0-9 in your number: ");
   continue;
    }
  }
  number = atol(s);
  if((number < 0) || (number > 2147483647))
    printf("Please enter a number between 0 and 2147483647: ");
  else
    numeric = -1;
  } while(!numeric);
  return number;
}
/********************************************************************/
/* gtusrply returns a 'y' or 'n' entered by the user                */
/********************************************************************/
char  gtusrply(void) {
     char c;
  int bad_reply = 1;

     do {
    c = getchar();
    while((getchar()) != '\n');
    if(c == '?') {
   printf("\nYour current population is %d people,",people);
   printf("\nfarming %ld acres, and storing %ld bushels.",
     acres,grain);
   printf("\nPlease enter y (for yes) or n (for no): ");
     continue;
       }
    if((c == 'y') || (c == 'n'))
   bad_reply = 0;
    else {
   printf("\nPlease enter either a y (for yes) or an n (for no): ");
    }
  } while(bad_reply);
  return c;
}
/********************************************************************/
/* get_random returns a random number between 0 and 1. When the     */
/* first time switch is true, a new seed is obtained.               */
/********************************************************************/
float get_random(int first_time) {
      int rand_nbr;
      unsigned seed;
      time_t tnow;

      if(first_time) {
  time(&tnow);
  seed = (int) tnow;
  srand(seed);
      }
      rand_nbr = (int)rand();
      return ((float)rand_nbr / (float) 32767.0);
}
