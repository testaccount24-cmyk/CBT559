/**************/
/* shftrite.c */
/******************************************************************/
/* Shifts an input ascii file right by the number of spaces       */
/* specified by the user. Also expands tab characters to the numbe*/
/* of spaces specified by the user. The user is prompted for the  */
/* names of the input and output files and shift and tab amounts. */
/* Author R Thornton September 1994                               */
/******************************************************************/

#include <stdio.h>
#include <stdlib.h>

void initialize(void);                 /* initialization function */
void mainline(void);                         /* mainline function */
void terminate(void);                     /* termination function */
void readrec(void);                   /* read next input file rec */
void writerec(void);                  /* write record to out file */

FILE *infile, *outfile;                   /* file handle pointers */

char innam[81];                                /* input file name */
char outnam[81];                              /* output file name */

char string[80];                                   /* work string */
char inrecord[256];                     /* input file record area */
char outrecord[256];                   /* output file record area */


int i,j,k;                               /* general purpose int's */
int morerecs = -1;                    /* input end-of-file switch */
int shift;                                  /* right shift amount */
int expand;                              /* amount to expand tabs */

/******************************************************************/
/* executive routine: overall program control                     */
/******************************************************************/
int  main() {
  initialize();                                     /* open files */
  while(morerecs)                       /* perform mainline until */
    mainline();                                /* no more records */
  terminate();                                     /* close files */
  exit(0);                                                /* quit */
}
/******************************************************************/
/* mainline function: process input file until no more records.   */
/******************************************************************/
void mainline(void) {
  i = 0;                                /* input record subscript */
  for(j=0;j<shift;j++)                    /* output record prefix */
    outrecord[j] = ' ';
  while(1) {
    if(inrecord[i] == '\0') {          /* terminating null found? */
      outrecord[j] = '\0';               /* yes, terminate output */
      break;                                /* and the while loop */
    }
    if(expand) {                               /* expanding tabs? */
      if(inrecord[i] == '\t') {            /* yes, is this a tab? */
        for(k=0;k<expand;k++)            /* yes, expand to spaces */
          outrecord[j++] = ' ';
          i++;                         /* step past the input tab */
      }
      else
        outrecord[j++] = inrecord[i++];     /* not tab, just copy */
    }
    else
      outrecord[j++] = inrecord[i++]; /* not expanding, just copy */
  }
  writerec();                           /* write an output record */
  readrec();                            /* read next input record */
}
/******************************************************************/
/* initialization: open files, read first input record.           */
/******************************************************************/
void initialize() {
  printf("\nEnter input file spec: ");  /* ask for input filename */
    gets(innam);                                /* and read it in */
  printf("\nEnter output file spec: "); /* ask for output filename*/
    gets(outnam);                               /* and read it in */
  if((infile=fopen(innam,"rb")) == NULL) {          /* open input */
    printf("Can't open file %s.",innam);   /* open failed message */
    exit(1);                                         /* terminate */
  }
  if((outfile=fopen(outnam,"wb")) == NULL) {       /* open output */
    printf("Can't open file %s.",outnam);
    exit(1);
  }
  printf("\nEnter number spaces to shift records right: ");
  gets(string);                               /* get shift number */
  shift = atoi(string);                /* convert ascii to binary */
  printf("\nEnter number spaces to substitute for tabs: ");
  gets(string);                                 /* get tab amount */
  expand = atoi(string);               /* convert ascii to binary */
  readrec();                      /* read first input file record */
}
/******************************************************************/
/* read next input file record. at end of file, set morerecs switc*/
/******************************************************************/
void readrec() {
  if(fgets(inrecord,255,infile) == NULL)  /* read input until eof */
    morerecs = 0;                    /* set switch at end of file */
}
/******************************************************************/
/* write a record to the output file                              */
/******************************************************************/
void writerec() {
  fputs(outrecord,outfile);                /* write output record */
}
/******************************************************************/
/* termination: close files                                       */
/******************************************************************/
void terminate() {
  fclose(infile);                             /* close input file */
  fclose(outfile);                           /* close output file */
}
