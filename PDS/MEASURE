/**************************************************************************/
/* measures the time taken to perform a process a specified (count) number*/
/* of times. total time required as well as single pass time are printed  */
/**************************************************************************/
#include <stdio.h>
#include <sys\timeb.h>

main() {
  unsigned i;
  unsigned count=1000;
  FILE *fil,*thou;
  struct timeb tmb;
  long begin_secs;
  short begin_msecs;
  double tused, tcurr, tcurrs, tcurrm, tbgn;
  char buffer[100];

  if((thou = fopen("c:\\thousand.rcd","rb")) == NULL) {
 printf("\nCan't open thousand.rcd file");
 abort();
  }

  /**************************************************/
  /* get time before entering timed area of program */
  /**************************************************/
  ftime(&tmb);
  begin_secs = tmb.time;
  begin_msecs = tmb.millitm;

  /**************************************************/
  /* following is the timed area of program         */
  /**************************************************/
  for(i=0;i<count;i++) {
 if((fil = fopen("c:\\autoexec.bat","rb")) == NULL) {
   printf("\nCan't open file");
   abort();
 }
 else {
   fseek(thou,250L,SEEK_SET);
   fread(buffer,80,1,thou);
   fseek(thou,750L,SEEK_SET);
   fread(buffer,80,1,thou);
   fclose(fil);
 }
  }

  /**************************************************/
  /* get time on exit from timed area of program    */
  /**************************************************/
  ftime(&tmb);

  /* now use the ftime() values to report time */
  tcurr = ((double)tmb.time * 1000.0) + (double)tmb.millitm;
  tbgn = ((double)begin_secs * 1000.0) + (double)begin_msecs;
  tused = (tcurr - tbgn) / 1000.0;
  printf("\nTotal ftime for %d loops = %f seconds",count, tused);
  printf("\nOne loop ran for %f seconds",tused /(double)count);
}
